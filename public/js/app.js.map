{"version":3,"sources":["app/app.js","controllers/mainController.js","controllers/roombahController.js","services/positionService.js","services/socketService.js","directives/roombahDirective.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["'use strict';\n\nvar app = angular.module('roombah-battle', []);\n","'use strict';\n\napp.controller('mainController', function(socket, $scope, positionService, $interval){\n\n  var vm = this;\n\n  socket.on('top', function(y) {\n    vm.top = y;\n  });\n\n  socket.on('right', function(x) {\n    vm.right = x;\n  });\n\n  $scope.roombah = {};\n  $scope.roombah.top = 0;\n  $scope.roombah.right = 0;\n  $scope.roombah.goingDown = true;\n  $scope.roombah.goingRight = false;\n  $scope.roombah.color = 'violet';\n\n  $interval(function() {\n    $scope.roombah = positionService.calculateMovement($scope.roombah);\n  }, 20);\n\n  socket.on('otherRoombahs', function(roombah) {\n    var roombahIndex = vm.roombahNames.indexOf(roombah.name);\n    if(roombahIndex > -1) {\n      vm.otherRoombahs[roombahIndex] = roombah;\n    } else {\n      vm.roombahNames.unshift(roombah.name);\n      vm.otherRoombahs.unshift(roombah);\n    }\n  });\n\n  $scope.$watch('roombah.top', function(y) {\n    socket.emit('otherRoombahs', $scope.roombah);\n  });\n\n  $scope.$watch('roombah.right', function(x) {\n    socket.emit('otherRoombahs', $scope.roombah);\n  });\n\n  vm.roombahNames = [];\n\n  vm.otherRoombahs = [];\n\n});\n","'use strict';\n\napp.controller('roombahController', function(socket) {\n});\n","'use strict';\n\napp.factory('positionService', function() {\n\n  var service = {};\n\n  var changeYDirection = function(roombah) {\n    roombah.goingDown = !roombah.goingDown;\n  }\n\n  var changeXDirection = function(roombah) {\n    roombah.goingRight = !roombah.goingRight;\n  }\n\n  var checkArenaBounds = function(roombah) {\n    if (roombah.top === 0 || roombah.top === 270) {\n      changeYDirection(roombah);\n    }\n    \n    if (roombah.right === 0 || roombah.right === 290) {\n      changeXDirection(roombah);\n    }\n  };\n\n  service.calculateMovement = function(roombah) {\n    if (roombah.goingDown) {\n      roombah.top++;\n    } else {\n      roombah.top--;\n    }\n    if (roombah.goingRight) {\n      roombah.right--;\n    } else {\n      roombah.right++;\n    }\n    checkArenaBounds(roombah);\n    return roombah;\n  };\n\n  return service;\n\n});\n","'use strict';\n\napp.factory('socket', function($rootScope) {\n\n  var socket = io.connect();\n\n  var service = {\n    on: function (eventName, callback) {\n      socket.on(eventName, function () {  \n        var args = arguments;\n        $rootScope.$apply(function () {\n          callback.apply(socket, args);\n        });\n      });\n    },\n    emit: function (eventName, data, callback) {\n      socket.emit(eventName, data, function () {\n        var args = arguments;\n        $rootScope.$apply(function () {\n          if (callback) {\n            callback.apply(socket, args);\n          }\n        });\n      })\n    }\n  };\n\n  return service;\n});\n","'use strict';\n\napp.directive('roombah', function(socket) {\n  return {\n    restrict: 'E',\n    template: '<div class=\"roombah\">{{ roombah.name }}</div>', \n    replace: true,\n    bindToController: {\n      'top': '=',\n      'right': '=',\n      'color': '=',\n      'name': '='\n    },\n    controller: 'roombahController',\n    controllerAs: 'rmbCtrl',\n    link:function (scope, element, attrs) {\n      scope.$watch(attrs.top, function (y) {\n        element.css('top', y + 'px');\n        socket.emit('top', y);\n      });\n      scope.$watch(attrs.right, function (x) {\n        element.css('right', x + 'px');\n        socket.emit('right', x);\n      });\n      scope.$watch(attrs.color, function (color) {\n        element.css('backgroundColor', color);\n      });\n    }\n  };\n});\n"],"sourceRoot":"/source/"}